.\" Copyright (C) 2014 Jan Chaloupka, Inc. All Rights Reserved.
.\" Written by Jan Chaloupka <jchaloup@redhat.com>
.TH VISUALIZE  1 2014-07-04 "Linux" "Code Assistant Manual"
.SH NAME
visualize \- visualize source code
.SH DESCRIPTION

Describe all files for each source code page (keyworddb, keyword, vis page keyworddb, ...)

.SH SYNOPSIS
.B visualize
.RB [-h|--help]
.RB [--debug]
.RB [--dest=DEST]
.IR file

.DESCRIPTION
.B visualize
is a tool helping you to visualize C source code.
What is basically does is to allow you to comment source code,
add own folds or mark keywords with a label without changing the code itself.
This is usefull for stable upstream codes that does not change often.
This is not a tool for very rapidly changing source codes.
Rather a helper to annotate an important parts of a code, merge lines of code
(even blocks) into new folds, that can be hidden or act as one semantical action.
E.g. code for initialization can be grouped into one fold and hidden
(needed only when debugging some init probles for example).
The aim is to show only those parts of code,
that are essential for quick walkthrough of the code.

For one destination folder, keyworddb file and layout folder are created.
keyworddb contains a definition of all keywords specific for all source code
files in the folder.
layout contains js files to allow folding and css file to color all keywords
specific to a given language (C by default) and a page.
For each page of a name <name>, <name>.html, <name>.vis and <name>.keyworddb are created.
<name>.html is the resulting html page, <name>.vis is a visualization file
and <name>.keyworddb contains keywords specific only to <name> file.

Each visualization file is in a simple text format. It consists of the following lines:
.RS 4
# for notes in a visualization file
.RE
.RS 4
<linenumber>:comment:text						for comment
.RE
.RS 4
<linenumber>:fold:<endlinenumber>:<folded 0|1>:text	to create a folded block,
folded says if the block is folded 1 or not 0
.RE
.RS 4
<linenumber>:highlight:<keyword>:text				to highlight a keyword
and comment it (text)
.RE
.RS 4
<linenumber>:needinfo:<keyword>:text				the same as highlight,
NEEDINFO appended before comment (text)
.RE

Folds can be nested, one line can contain more keywords
(highlights, needinfo, keywords from keyworddb).
Local keyworddb files (<page>.keyworddb) overwrites global keywords from keyworddb.
As of now, at most two highlights/needinfo for the same keyword on the line are support.
If you have more than two highlights or two needinfo for the same keyword,
you should reconsider user of these keywords (collapse them into one highlight or needinfo).

keyworddb file is in a simple text format. It consists of the following lines:
.RS 4
# for notes in a visualization file
.RE
.RS 4
keyword:comment			to add comment to a keyword
.RE

.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Print help.
.TP
.BR \-\-debug
Print debugging information.
.TP
.BI \-\-dest= DEST
Destination folder for html pages, keyworddb files and other folders/files. If the directory does not exist, it is created. Implicit value is examples (created in the current directory). It is recommended to use your own directory, e.g. /home/user/Documents/visdata/destionation/. Directory path in a form ~/path is taken as a relative path, i.e. ./~/path. Instead use absolute path if necesary.

.SH EXAMPLES

Command example:
.RS 4
$ ls
.RE
.RS 4
hash.c    metal.c
.RE
.RS 4
pipes.c   rock.h
.RE
.RS 4
$ visualize --dest=/home/user/Documents/visdata/project metal.c
.RE

Visualization file example:
.RS 4
#### reading config file ####
.RE
.RS 4
827:needinfo:namestore:list of items of config file
.RE
.RS 4
843:comment:~/.manpath
.RE
.RS 4
846:comment:read config file only once
.RE
.RS 4
850:fold:866:1:read config file from ~/.manpath or user file (user_config_file) through option
.RE
.RS 4
851:comment:NULL if called from manpath
.RE
.RS 4
862:highlight:add_to_dirlist (config, 1):parses config file and calls add functions
.RE

keyworddb example:
.RS 4
#### man-db general functions ####
.RE
.RS 4
get_manpath:get all possible man paths (optionally with systems)
.RE
.RS 4
add_nls_manpaths:each path in manpath replace by itself plus prepended its locale paths (locale = languages like fr,de,...)
.RE
.RS 4
locale_manpath:to each path in manpath prepend its localized paths
.RE

